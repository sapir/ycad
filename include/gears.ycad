# calculations based on:
# * http://makezine.com/2010/06/28/make-your-own-gears/
#   based in turn on http://www.bostongear.com/pdf/gear_theory.pdf
#   (can be found in Wayback Machine)
# * http://en.wikipedia.org/wiki/Gear
# * http://www.metrication.com/engineering/gears.html


# it seems 20 deg angle is better for torque, but
# 14.5 deg angle is better for backlash.
# D is pitch diameter - effective diameter of gear
#   (not the same as outer diameter)
# m is module - ratio of pitch diameter to number of teeth (basically the
#   arc length of the tooth spacing)
func gearProfile(D, m=4, pressureAngle=20) {
    if D % m != 0 { print("WARNING: non-integer number of teeth") }

    N = D / m           # number of teeth
    P = 1 / m           # diametrical pitch
    p = pi / P          # circular pitch

    a = 1 / P           # addendum
    D_o = D + 2 * a     # outer diameter

    # whole depth
    if m < 1.25 {
        h_t = 2.4 * m
    } else {
        h_t = 2.25 * m
    }

    b = h_t - a         # dedendum
    D_r = D - 2 * b     # root diameter
    t = pi / 2 / P      # tooth thickness (at pitch dia)

    # tooth thickness at tooth tip (TODO: is this correct?)
    t_tip = t - a * sin(pressureAngle)

    r_center = D / 2
    r_root = r_center - b
    r_tip = r_center + a
    
    half_t_root_angle = atan(t / 2 / r_root)    # half of thickness at root in degrees
    half_t_angle = atan(t / 2 / r_center)       # half of thickness at center in degrees
    half_t_tip_angle = atan(t_tip / 2 / r_tip)  # half of thickness at tip in degrees

    func polarPt(r, a) {
        return [r*cos(a), r*sin(a)]
    }

    points = []
    for i in (range(N)) {
        angle = 360/N * i
        points = points + [
                polarPt(r_root, angle - half_t_root_angle),
                polarPt(r_center, angle - half_t_angle),
                polarPt(r_tip, angle - half_t_tip_angle),
                polarPt(r_tip, angle + half_t_tip_angle),
                polarPt(r_center, angle + half_t_angle),
                polarPt(r_root, angle + half_t_root_angle)
            ]
    }

    polygon(points)
}

# TODO: add center distance calculation

func spurGear(D, m=4, h, pressureAngle=20) {
    gearProfile(D=D, m=m, pressureAngle=pressureAngle)
        .extrude(h=h)
}
